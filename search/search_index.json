{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u2693 + \ud83d\udce6 = \ud83d\udc95 \u00b6 Help metis \u00b6 Let us know about your ideas #metis on Github or in our Telegram channel @ t.me/dlrgmetis .","title":"Information"},{"location":"#_1","text":"","title":"\u2693 + \ud83d\udce6 = \ud83d\udc95"},{"location":"#help-metis","text":"Let us know about your ideas #metis on Github or in our Telegram channel @ t.me/dlrgmetis .","title":"Help metis"},{"location":"installation/","text":"Warning Lies dir vorher die \"Systemanforderungen\" durch! Du ben\u00f6tigst Docker und Docker Compose 1. Installier dir Docker und Docker Compose und Docker curl - sSL https : // get . docker . com / | CHANNEL = stable sh # After the installation process is finished , you may need to enable the service and make sure it is started ( e . g . CentOS 7 ) systemctl enable docker . service systemctl start docker . service Docker-Compose curl - L https : // github . com / docker / compose / releases / download / 1 . 23 . 1 / docker - compose - $ ( uname - s ) - $ ( uname - m ) > / usr / local / bin / docker - compose chmod + x / usr / local / bin / docker - compose 2. Node.js Als n\u00e4chstes m\u00fcssen wir noch Node.js Version Manager installieren. Dazu benutzen wir einen Version Manager \"n\" von tj/n f\u00fcr MacOS mit Homebrew brew install n f\u00fcr Linux und macOS curl - L https : // git . io / n - install | bash 3. Jetzt kannst du den development branch von metis clonen. git clone https : // github . com / dlrg / metis . git cd metis 4. Das Projekt startest du im enstprechenden Verzeichnis mit npm start Done!","title":"Installation"},{"location":"systemanforderungen/","text":"Vor dem Starten von metis , solltest du einige Systemanforderungen beachten: Warning When running metis on a Debian 8 (Jessie) box, you should switch to kernel 4.9 from Jessie backports to avoid a bug when running Docker containers with healthchecks ! For more details read: github.com/docker/docker/issues/30402 Info metis: ben\u00f6tigt einige Ports um Verbindungen zu den einzelnen Docker Container herstellen zu k\u00f6nnen. Stelle sicher, dass deine Firewall diese nicht blockiert. Minimum System Resources \u00b6 Damit metis ideal l\u00e4uft sollten folgende Ressourcen vorhanden sein: Resource metis CPU 1 GHz RAM 3 GiB + Swap (besser: 4 GiB und mehr + Swap) Disk 15 GiB System Type x86_64 Firewall & Ports \u00b6 Stelle bitte sicher, dass die folgenden Ports f\u00fcr offen sind und f\u00fcr metis zur Verf\u00fcgung stehen: # netstat - tulpn | grep - E - w '3000|9000|80' Default Ports \u00b6 Wenn Du eine Firewall hast stelle sicher das die folgenden Ports f\u00fcr Metis zur Verf\u00fcgung stehen: Service Protocol Port Container Metis API TCP 3000 metis_api Metis Client TCP 80 metis_client","title":"Systemanforderungen"},{"location":"systemanforderungen/#minimum-system-resources","text":"Damit metis ideal l\u00e4uft sollten folgende Ressourcen vorhanden sein: Resource metis CPU 1 GHz RAM 3 GiB + Swap (besser: 4 GiB und mehr + Swap) Disk 15 GiB System Type x86_64","title":"Minimum System Resources"},{"location":"systemanforderungen/#firewall-ports","text":"Stelle bitte sicher, dass die folgenden Ports f\u00fcr offen sind und f\u00fcr metis zur Verf\u00fcgung stehen: # netstat - tulpn | grep - E - w '3000|9000|80'","title":"Firewall &amp; Ports"},{"location":"systemanforderungen/#default-ports","text":"Wenn Du eine Firewall hast stelle sicher das die folgenden Ports f\u00fcr Metis zur Verf\u00fcgung stehen: Service Protocol Port Container Metis API TCP 3000 metis_api Metis Client TCP 80 metis_client","title":"Default Ports"}]}